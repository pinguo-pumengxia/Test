buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        // `添加packer插件依赖`
        classpath 'com.mcxiaoke.gradle:packer:1.0.0'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'com.android.application'

apply plugin: 'packer'

apply plugin: 'findbugs'

apply plugin: 'pmd'


packer {
    // 指定渠道打包输出目录
    archiveOutput = file(new File(project.rootProject.buildDir.path, "apks"))
    // 指定渠道打包输出文件名格式
    archiveNameFormat = 'Test_v${versionName}_${flavorName}_${\' + System.currentTimeMillis() + \'}${versionCode}'
    // 指定渠道打包需要修改的AndroidManifest文件项
    manifestMatcher = ['UMENG_CHANNEL', 'Promotion_Market']
    // 指定是否使用build版本号自增
    buildNumberAuto = true
    // 指定使用版本号自增的buildType，默认是全部
    buildNumberTypeMatcher = ['release', 'beta']

}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.test.pmx.test"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

//    signingConfigs {
//        release {
//            storeFile file("test.keystore")
//            storePassword "123456"
//            keyAlias "circle"
//            keyPassword "123456"
//        }
//    }

    buildTypes {
        release {
//            signingConfig signingConfigs.release
            minifyEnabled false
        }
        debug {
//            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
        }
    }

    lintOptions {
        abortOnError false
        xmlReport true
        // 用于写入报告的文件（如果不指定，默认为lint-results.xml）
        xmlOutput file("lint-results.xml")
    }

    findbugs {
        sourceSets = []
        ignoreFailures = true
    }

    task findbugs(type: FindBugs, dependsOn: assembleDebug) {

        description 'Run findbugs'
        group 'verification'

        classes = fileTree('build/intermediates/classes/debug/')
        source = fileTree('src/main/java')
        classpath = files()

        effort = 'max'

        excludeFilter = file("./config/findbugs/exclude.xml")

        reports {
            xml.enabled = true
            html.enabled = false
        }
    }

    task pmd (type: Pmd, dependsOn: assembleDebug) {
        ignoreFailures = true
        description 'Run pmd'
        group 'verification'
        source = fileTree('src/main/java')
        ruleSets = ["java-android"]
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.doLast {
        project.tasks.getByName("findbugs").execute()
        project.tasks.getByName("pmd").execute()
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.+'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.0.+'
    compile 'com.android.support:palette-v7:22.0.+'
    compile 'com.android.support:cardview-v7:22.0.+'
    compile 'com.android.support:support-v4:22.0.+'
}
